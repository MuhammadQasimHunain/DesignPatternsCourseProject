src/chess/Cell.java:13:	Avoid short class names like Cell
src/chess/Cell.java:17:	Avoid excessively long variable names like ispossibledestination
src/chess/Cell.java:17:	Field ispossibledestination has the same name as a method
src/chess/Cell.java:17:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Cell.java:17:	fieldCommentRequirement Required
src/chess/Cell.java:18:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Cell.java:18:	fieldCommentRequirement Required
src/chess/Cell.java:19:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Cell.java:19:	fieldCommentRequirement Required
src/chess/Cell.java:20:	Avoid variables with short names like x
src/chess/Cell.java:20:	Avoid variables with short names like y
src/chess/Cell.java:20:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Cell.java:20:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Cell.java:20:	To avoid mistakes add a comment at the beginning of the x field if you want a default access modifier
src/chess/Cell.java:20:	Use explicit scoping instead of the default package private level
src/chess/Cell.java:20:	fieldCommentRequirement Required
src/chess/Cell.java:21:	Avoid using redundant field initializer for 'isSelected'
src/chess/Cell.java:21:	Field isSelected has the same name as a method
src/chess/Cell.java:21:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Cell.java:21:	fieldCommentRequirement Required
src/chess/Cell.java:22:	Avoid using redundant field initializer for 'ischeck'
src/chess/Cell.java:22:	Field ischeck has the same name as a method
src/chess/Cell.java:22:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Cell.java:22:	fieldCommentRequirement Required
src/chess/Cell.java:25:	Avoid variables with short names like p
src/chess/Cell.java:25:	Avoid variables with short names like x
src/chess/Cell.java:25:	Avoid variables with short names like y
src/chess/Cell.java:25:	It is a good practice to call super() in a constructor
src/chess/Cell.java:25:	Parameter 'p' is not assigned and could be declared final
src/chess/Cell.java:25:	Parameter 'x' is not assigned and could be declared final
src/chess/Cell.java:25:	Parameter 'y' is not assigned and could be declared final
src/chess/Cell.java:25:	publicMethodCommentRequirement Required
src/chess/Cell.java:33:	Avoid using if...else statements without curly braces
src/chess/Cell.java:36:	Avoid using if...else statements without curly braces
src/chess/Cell.java:38:	Avoid using if statements without curly braces
src/chess/Cell.java:39:	Overridable method 'setPiece' called during object construction
src/chess/Cell.java:42:	Comment is too large: Line too long
src/chess/Cell.java:43:	It is a good practice to call super() in a constructor
src/chess/Cell.java:43:	Parameter 'cell' is not assigned and could be declared final
src/chess/Cell.java:43:	publicMethodCommentRequirement Required
src/chess/Cell.java:49:	Avoid using if...else statements without curly braces
src/chess/Cell.java:51:	Avoid using if...else statements without curly braces
src/chess/Cell.java:52:	Avoid if (x != y) ..; else ..;
src/chess/Cell.java:54:	Overridable method 'setPiece' called during object construction
src/chess/Cell.java:57:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Cell.java:57:	Avoid using if...else statements without curly braces
src/chess/Cell.java:60:	Avoid variables with short names like p
src/chess/Cell.java:60:	Parameter 'p' is not assigned and could be declared final
src/chess/Cell.java:60:	publicMethodCommentRequirement Required
src/chess/Cell.java:63:	Local variable 'img' could be declared final
src/chess/Cell.java:63:	Unnecessary use of fully qualified name 'javax.swing.ImageIcon' due to existing import 'javax.swing.*'
src/chess/Cell.java:68:	publicMethodCommentRequirement Required
src/chess/Cell.java:72:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Cell.java:77:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Cell.java:83:	publicMethodCommentRequirement Required
src/chess/Cell.java:88:	publicMethodCommentRequirement Required
src/chess/Cell.java:94:	publicMethodCommentRequirement Required
src/chess/Cell.java:99:	publicMethodCommentRequirement Required
src/chess/Cell.java:105:	publicMethodCommentRequirement Required
src/chess/Cell.java:111:	publicMethodCommentRequirement Required
src/chess/Cell.java:117:	publicMethodCommentRequirement Required
src/chess/Cell.java:122:	publicMethodCommentRequirement Required
src/chess/Cell.java:128:	publicMethodCommentRequirement Required
src/chess/Cell.java:132:	Avoid using if...else statements without curly braces
src/chess/Cell.java:134:	Avoid using if...else statements without curly braces
src/chess/Cell.java:138:	publicMethodCommentRequirement Required
src/chess/Main.java:1:	Possible God class (WMC=151, ATFD=167, TCC=0.15789473684210525)
src/chess/Main.java:30:	Avoid short class names like Main
src/chess/Main.java:30:	The class 'Main' has a Cyclomatic Complexity of 7 (Highest = 37).
src/chess/Main.java:30:	The class 'Main' has a Modified Cyclomatic Complexity of 6 (Highest = 24).
src/chess/Main.java:30:	The class 'Main' has a Standard Cyclomatic Complexity of 6 (Highest = 24).
src/chess/Main.java:30:	Too many fields
src/chess/Main.java:31:	This class has too many methods, consider refactoring it.
src/chess/Main.java:35:	Variables that are final and static should be all capitals, 'Height' is not all capitals.
src/chess/Main.java:35:	fieldCommentRequirement Required
src/chess/Main.java:36:	Variables that are final and static should be all capitals, 'Width' is not all capitals.
src/chess/Main.java:36:	fieldCommentRequirement Required
src/chess/Main.java:37:	fieldCommentRequirement Required
src/chess/Main.java:38:	fieldCommentRequirement Required
src/chess/Main.java:39:	fieldCommentRequirement Required
src/chess/Main.java:40:	Avoid variables with short names like bp
src/chess/Main.java:40:	Avoid variables with short names like wp
src/chess/Main.java:40:	fieldCommentRequirement Required
src/chess/Main.java:41:	Avoid variables with short names like bq
src/chess/Main.java:41:	Avoid variables with short names like wq
src/chess/Main.java:41:	fieldCommentRequirement Required
src/chess/Main.java:42:	Avoid variables with short names like bk
src/chess/Main.java:42:	Avoid variables with short names like wk
src/chess/Main.java:42:	fieldCommentRequirement Required
src/chess/Main.java:43:	Avoid variables with short names like c
src/chess/Main.java:43:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:43:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:43:	Perhaps 'c' could be replaced by a local variable.
src/chess/Main.java:43:	fieldCommentRequirement Required
src/chess/Main.java:44:	Avoid using redundant field initializer for 'chance'
src/chess/Main.java:44:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:44:	fieldCommentRequirement Required
src/chess/Main.java:45:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:45:	fieldCommentRequirement Required
src/chess/Main.java:46:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:46:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:46:	fieldCommentRequirement Required
src/chess/Main.java:47:	Avoid using redundant field initializer for 'Black'
src/chess/Main.java:47:	Avoid using redundant field initializer for 'White'
src/chess/Main.java:47:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:47:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:47:	Variables should start with a lowercase character, 'Black' starts with uppercase character.
src/chess/Main.java:47:	Variables should start with a lowercase character, 'White' starts with uppercase character.
src/chess/Main.java:47:	fieldCommentRequirement Required
src/chess/Main.java:48:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:48:	Private field 'board' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:48:	fieldCommentRequirement Required
src/chess/Main.java:49:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:49:	Private field 'wdetails' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:49:	fieldCommentRequirement Required
src/chess/Main.java:50:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:50:	Private field 'bdetails' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:50:	fieldCommentRequirement Required
src/chess/Main.java:51:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:51:	Perhaps 'wcombopanel' could be replaced by a local variable.
src/chess/Main.java:51:	Private field 'wcombopanel' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:51:	fieldCommentRequirement Required
src/chess/Main.java:52:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:52:	Perhaps 'bcombopanel' could be replaced by a local variable.
src/chess/Main.java:52:	Private field 'bcombopanel' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:52:	fieldCommentRequirement Required
src/chess/Main.java:53:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:53:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:53:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:53:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:53:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:53:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:53:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:53:	Perhaps 'time' could be replaced by a local variable.
src/chess/Main.java:53:	Private field 'BlackPlayer' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:53:	Private field 'WhitePlayer' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:53:	Private field 'controlPanel' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:53:	Private field 'displayTime' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:53:	Private field 'showPlayer' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:53:	Private field 'temp' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:53:	Private field 'time' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:53:	Variables should start with a lowercase character, 'BlackPlayer' starts with uppercase character.
src/chess/Main.java:53:	Variables should start with a lowercase character, 'WhitePlayer' starts with uppercase character.
src/chess/Main.java:53:	fieldCommentRequirement Required
src/chess/Main.java:54:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:54:	Private field 'split' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:54:	fieldCommentRequirement Required
src/chess/Main.java:55:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:55:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:55:	Private field 'label' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:55:	fieldCommentRequirement Required
src/chess/Main.java:56:	The field name indicates a constant but its modifiers do not
src/chess/Main.java:56:	Variables should start with a lowercase character, 'CHNC' starts with uppercase character.
src/chess/Main.java:56:	fieldCommentRequirement Required
src/chess/Main.java:57:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:57:	fieldCommentRequirement Required
src/chess/Main.java:58:	Variables should start with a lowercase character, 'Mainboard' starts with uppercase character.
src/chess/Main.java:58:	fieldCommentRequirement Required
src/chess/Main.java:59:	Avoid using redundant field initializer for 'end'
src/chess/Main.java:59:	Avoid using redundant field initializer for 'selected'
src/chess/Main.java:59:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:59:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:59:	fieldCommentRequirement Required
src/chess/Main.java:60:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:60:	Perhaps 'content' could be replaced by a local variable.
src/chess/Main.java:60:	Private field 'content' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:60:	fieldCommentRequirement Required
src/chess/Main.java:61:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:61:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:61:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:61:	Private field 'wplayer' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:61:	fieldCommentRequirement Required
src/chess/Main.java:62:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:62:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:62:	Perhaps 'Wnames' could be replaced by a local variable.
src/chess/Main.java:62:	Private field 'Wnames' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:62:	Variables should start with a lowercase character, 'Wnames' starts with uppercase character.
src/chess/Main.java:62:	fieldCommentRequirement Required
src/chess/Main.java:63:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:63:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:63:	Perhaps 'Bnames' could be replaced by a local variable.
src/chess/Main.java:63:	Private field 'Bnames' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:63:	Variables should start with a lowercase character, 'Bnames' starts with uppercase character.
src/chess/Main.java:63:	fieldCommentRequirement Required
src/chess/Main.java:64:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:64:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:64:	Private field 'bcombo' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:64:	Private field 'wcombo' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:64:	fieldCommentRequirement Required
src/chess/Main.java:65:	Avoid using redundant field initializer for 'bname'
src/chess/Main.java:65:	Avoid using redundant field initializer for 'winner'
src/chess/Main.java:65:	Avoid using redundant field initializer for 'wname'
src/chess/Main.java:65:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:65:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:65:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:65:	Private field 'bname' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:65:	Private field 'wname' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:65:	fieldCommentRequirement Required
src/chess/Main.java:66:	Possible unsafe assignment to a non-final static field in a constructor.
src/chess/Main.java:66:	To avoid mistakes add a comment at the beginning of the move field if you want a default access modifier
src/chess/Main.java:66:	Use explicit scoping instead of the default package private level
src/chess/Main.java:66:	fieldCommentRequirement Required
src/chess/Main.java:67:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:67:	fieldCommentRequirement Required
src/chess/Main.java:68:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:68:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:68:	Perhaps 'bscroll' could be replaced by a local variable.
src/chess/Main.java:68:	Perhaps 'wscroll' could be replaced by a local variable.
src/chess/Main.java:68:	Private field 'bscroll' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:68:	Private field 'wscroll' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:68:	fieldCommentRequirement Required
src/chess/Main.java:69:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:69:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:69:	Private field 'BNames' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:69:	Private field 'WNames' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:69:	Variables should start with a lowercase character, 'BNames' starts with uppercase character.
src/chess/Main.java:69:	Variables should start with a lowercase character, 'WNames' starts with uppercase character.
src/chess/Main.java:69:	fieldCommentRequirement Required
src/chess/Main.java:70:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:70:	Private field 'timeSlider' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:70:	fieldCommentRequirement Required
src/chess/Main.java:71:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:71:	Perhaps 'image' could be replaced by a local variable.
src/chess/Main.java:71:	fieldCommentRequirement Required
src/chess/Main.java:72:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:72:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:72:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:72:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:72:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:72:	Private field 'BNewPlayer' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:72:	Private field 'WNewPlayer' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:72:	Private field 'bselect' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:72:	Private field 'start' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:72:	Private field 'wselect' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:72:	Variables should start with a lowercase character, 'BNewPlayer' starts with uppercase character.
src/chess/Main.java:72:	Variables should start with a lowercase character, 'WNewPlayer' starts with uppercase character.
src/chess/Main.java:72:	fieldCommentRequirement Required
src/chess/Main.java:73:	Possible unsafe assignment to a non-final static field in a constructor.
src/chess/Main.java:73:	fieldCommentRequirement Required
src/chess/Main.java:74:	Parameter 'args' is not assigned and could be declared final
src/chess/Main.java:74:	publicMethodCommentRequirement Required
src/chess/Main.java:97:	Avoid instantiating new objects inside loops
src/chess/Main.java:98:	Avoid instantiating new objects inside loops
src/chess/Main.java:108:	It is a good practice to call super() in a constructor
src/chess/Main.java:108:	The constructor with 0 parameters has an NCSS line count of 103
src/chess/Main.java:113:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Main.java:114:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Main.java:115:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Main.java:124:	Local variable 'img' could be declared final
src/chess/Main.java:128:	Comment is too large: Too many lines
src/chess/Main.java:139:	Local variable 'witr' could be declared final
src/chess/Main.java:140:	Avoid using while statements without curly braces
src/chess/Main.java:144:	Local variable 'bitr' could be declared final
src/chess/Main.java:145:	Avoid using while statements without curly braces
src/chess/Main.java:171:	Local variable 'whitestats' could be declared final
src/chess/Main.java:172:	Local variable 'blackstats' could be declared final
src/chess/Main.java:209:	Comment is too large: Too many lines
src/chess/Main.java:257:	Local variable 'setTime' could be declared final
src/chess/Main.java:277:	Found 'DU'-anomaly for variable 'serialVersionUID' (lines '277'-'297').
src/chess/Main.java:280:	Avoid variables with short names like g
src/chess/Main.java:280:	Parameter 'g' is not assigned and could be declared final
src/chess/Main.java:280:	publicMethodCommentRequirement Required
src/chess/Main.java:282:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:282:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:284:	System.out.println is used
src/chess/Main.java:300:	The method 'defineAllCells' has a Cyclomatic Complexity of 37.
src/chess/Main.java:300:	The method 'defineAllCells' has a Modified Cyclomatic Complexity of 21.
src/chess/Main.java:300:	The method 'defineAllCells' has a Standard Cyclomatic Complexity of 21.
src/chess/Main.java:300:	publicMethodCommentRequirement Required
src/chess/Main.java:301:	Avoid variables with short names like P
src/chess/Main.java:301:	Unnecessary use of fully qualified name 'pieces.Piece' due to existing import 'pieces.*'
src/chess/Main.java:301:	Variables should start with a lowercase character, 'P' starts with uppercase character.
src/chess/Main.java:304:	Avoid using for statements without curly braces
src/chess/Main.java:307:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'309').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'311').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'313').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'315').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'317').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'319').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'321').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'323').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'325').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'327').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'329').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'331').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'333').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'335').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'337').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'339').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'341').
src/chess/Main.java:307:	Found 'DD'-anomaly for variable 'P' (lines '307'-'343').
src/chess/Main.java:309:	Avoid using if...else statements without curly braces
src/chess/Main.java:311:	Avoid using if...else statements without curly braces
src/chess/Main.java:313:	Avoid using if...else statements without curly braces
src/chess/Main.java:315:	Avoid using if...else statements without curly braces
src/chess/Main.java:317:	Avoid using if...else statements without curly braces
src/chess/Main.java:319:	Avoid using if...else statements without curly braces
src/chess/Main.java:321:	Avoid using if...else statements without curly braces
src/chess/Main.java:323:	Avoid using if...else statements without curly braces
src/chess/Main.java:325:	Avoid using if...else statements without curly braces
src/chess/Main.java:327:	Avoid using if...else statements without curly braces
src/chess/Main.java:329:	Avoid using if...else statements without curly braces
src/chess/Main.java:331:	Avoid using if...else statements without curly braces
src/chess/Main.java:333:	Avoid using if...else statements without curly braces
src/chess/Main.java:335:	Avoid using if...else statements without curly braces
src/chess/Main.java:337:	Avoid using if...else statements without curly braces
src/chess/Main.java:339:	Avoid using if...else statements without curly braces
src/chess/Main.java:340:	Avoid using Literals in Conditional Statements
src/chess/Main.java:341:	Avoid using if...else statements without curly braces
src/chess/Main.java:342:	Avoid using Literals in Conditional Statements
src/chess/Main.java:342:	Avoid using if statements without curly braces
src/chess/Main.java:344:	Avoid instantiating new objects inside loops
src/chess/Main.java:345:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:353:	Parameter 'timeSlider' is not assigned and could be declared final
src/chess/Main.java:353:	publicMethodCommentRequirement Required
src/chess/Main.java:365:	publicMethodCommentRequirement Required
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:367:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:372:	Avoid unnecessary comparisons in boolean expressions
src/chess/Main.java:372:	Avoid using if statements without curly braces
src/chess/Main.java:374:	Avoid using if statements without curly braces
src/chess/Main.java:376:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Main.java:383:	Avoid using Literals in Conditional Statements
src/chess/Main.java:383:	Use equals() to compare strings instead of '==' or '!='
src/chess/Main.java:384:	Avoid using if...else statements without curly braces
src/chess/Main.java:386:	Avoid using if...else statements without curly braces
src/chess/Main.java:393:	Parameter 'color' is not assigned and could be declared final
src/chess/Main.java:396:	A method should have only one exit point, and that should be the last statement in the method
src/chess/Main.java:396:	Avoid using if...else statements without curly braces
src/chess/Main.java:398:	Avoid using if...else statements without curly braces
src/chess/Main.java:402:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:402:	Parameter 'destlist' is not assigned and could be declared final
src/chess/Main.java:404:	Avoid variables with short names like it
src/chess/Main.java:404:	Local variable 'it' could be declared final
src/chess/Main.java:405:	Avoid using while statements without curly braces
src/chess/Main.java:406:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:410:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:410:	Parameter 'destlist' is not assigned and could be declared final
src/chess/Main.java:412:	Avoid variables with short names like it
src/chess/Main.java:412:	Local variable 'it' could be declared final
src/chess/Main.java:413:	Avoid using while statements without curly braces
src/chess/Main.java:414:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:419:	Parameter 'fromcell' is not assigned and could be declared final
src/chess/Main.java:419:	Parameter 'tocell' is not assigned and could be declared final
src/chess/Main.java:421:	Found 'DD'-anomaly for variable 'newboardstate' (lines '421'-'424').
src/chess/Main.java:422:	Avoid using for statements without curly braces
src/chess/Main.java:424:	Avoid instantiating new objects inside loops
src/chess/Main.java:424:	Avoid printStackTrace(); use a logger call instead.
src/chess/Main.java:424:	Found 'DD'-anomaly for variable 'newboardstate' (lines '424'-'424').
src/chess/Main.java:424:	System.out.println is used
src/chess/Main.java:426:	Avoid using if statements without curly braces
src/chess/Main.java:426:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:426:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:426:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:427:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:427:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:427:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:429:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:429:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:429:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:429:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:429:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:429:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:429:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:429:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:429:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:430:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:430:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:430:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:432:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:433:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:433:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:433:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:433:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:433:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:433:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:433:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:433:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:433:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:433:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:435:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:435:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:435:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Avoid unnecessary comparisons in boolean expressions
src/chess/Main.java:436:	Avoid unnecessary if..then..else statements when returning booleans
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:436:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:437:	A method should have only one exit point, and that should be the last statement in the method
src/chess/Main.java:437:	Avoid using if...else statements without curly braces
src/chess/Main.java:439:	Avoid using if...else statements without curly braces
src/chess/Main.java:443:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:443:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:443:	Parameter 'destlist' is not assigned and could be declared final
src/chess/Main.java:443:	Parameter 'fromcell' is not assigned and could be declared final
src/chess/Main.java:445:	Local variable 'newlist' could be declared final
src/chess/Main.java:446:	Found 'DD'-anomaly for variable 'newboardstate' (lines '446'-'453').
src/chess/Main.java:447:	Avoid variables with short names like it
src/chess/Main.java:447:	Local variable 'it' could be declared final
src/chess/Main.java:448:	Avoid variables with short names like x
src/chess/Main.java:448:	Avoid variables with short names like y
src/chess/Main.java:448:	Use one line for each declaration, it enhances code readability.
src/chess/Main.java:451:	Avoid using for statements without curly braces
src/chess/Main.java:453:	Avoid instantiating new objects inside loops
src/chess/Main.java:453:	Avoid printStackTrace(); use a logger call instead.
src/chess/Main.java:453:	Found 'DD'-anomaly for variable 'newboardstate' (lines '453'-'453').
src/chess/Main.java:453:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:455:	Local variable 'tempc' could be declared final
src/chess/Main.java:456:	Avoid using if statements without curly braces
src/chess/Main.java:456:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:456:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:456:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:457:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:457:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:457:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:458:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:458:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:458:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:458:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:458:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:458:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:458:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:458:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:458:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:459:	Found 'DD'-anomaly for variable 'x' (lines '459'-'465').
src/chess/Main.java:459:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:460:	Found 'DD'-anomaly for variable 'y' (lines '460'-'466').
src/chess/Main.java:460:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:461:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:461:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:461:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:463:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:463:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:463:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:463:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:463:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:463:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:463:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:463:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:463:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:463:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:464:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:464:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:464:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:464:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:464:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:464:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:464:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:464:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:464:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:464:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:468:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:468:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:468:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:469:	Avoid unnecessary comparisons in boolean expressions
src/chess/Main.java:469:	Avoid using if statements without curly braces
src/chess/Main.java:469:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:469:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:469:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:469:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:469:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:469:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:469:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:469:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:469:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:469:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:469:	Useless parentheses.
src/chess/Main.java:470:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:475:	Comment is too large: Line too long
src/chess/Main.java:476:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:476:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Main.java:476:	Parameter 'color' is not assigned and could be declared final
src/chess/Main.java:476:	Parameter 'destlist' is not assigned and could be declared final
src/chess/Main.java:476:	Parameter 'fromcell' is not assigned and could be declared final
src/chess/Main.java:478:	Local variable 'newlist' could be declared final
src/chess/Main.java:479:	Found 'DD'-anomaly for variable 'newboardstate' (lines '479'-'486').
src/chess/Main.java:480:	Avoid variables with short names like it
src/chess/Main.java:480:	Local variable 'it' could be declared final
src/chess/Main.java:481:	Avoid variables with short names like x
src/chess/Main.java:481:	Avoid variables with short names like y
src/chess/Main.java:481:	Use one line for each declaration, it enhances code readability.
src/chess/Main.java:484:	Avoid using for statements without curly braces
src/chess/Main.java:486:	Avoid instantiating new objects inside loops
src/chess/Main.java:486:	Avoid printStackTrace(); use a logger call instead.
src/chess/Main.java:486:	Found 'DD'-anomaly for variable 'newboardstate' (lines '486'-'486').
src/chess/Main.java:486:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:487:	Local variable 'tempc' could be declared final
src/chess/Main.java:488:	Avoid using if statements without curly braces
src/chess/Main.java:488:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:488:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:488:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:489:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:489:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:489:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:490:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:490:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:490:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:490:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:490:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:490:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:490:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:490:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:490:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:491:	Found 'DD'-anomaly for variable 'x' (lines '491'-'497').
src/chess/Main.java:491:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:492:	Found 'DD'-anomaly for variable 'y' (lines '492'-'498').
src/chess/Main.java:492:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:493:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:493:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:493:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:495:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:495:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:495:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:495:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:495:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:495:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:495:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:495:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:495:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:495:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:496:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:496:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:496:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:496:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:496:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:496:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:496:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:496:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:496:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:496:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:500:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:500:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:500:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:501:	Avoid unnecessary comparisons in boolean expressions
src/chess/Main.java:501:	Avoid using if statements without curly braces
src/chess/Main.java:501:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:501:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:501:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:501:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:501:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:501:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:501:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:501:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:501:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:501:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:501:	Useless parentheses.
src/chess/Main.java:502:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:507:	Comment is too large: Line too long
src/chess/Main.java:508:	Parameter 'color' is not assigned and could be declared final
src/chess/Main.java:508:	publicMethodCommentRequirement Required
src/chess/Main.java:510:	Found 'DU'-anomaly for variable 'dlist' (lines '510'-'526').
src/chess/Main.java:515:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:515:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:515:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:515:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:515:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:515:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:515:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:517:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:518:	Found 'DD'-anomaly for variable 'dlist' (lines '518'-'519').
src/chess/Main.java:518:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:518:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:518:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:518:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:519:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:519:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:520:	Avoid using if statements without curly braces
src/chess/Main.java:520:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:520:	Substitute calls to size() == 0 (or size() != 0, size() > 0, size() < 1) with calls to isEmpty()
src/chess/Main.java:521:	A method should have only one exit point, and that should be the last statement in the method
src/chess/Main.java:534:	Potential violation of Law of Demeter (static property access)
src/chess/Main.java:535:	Avoid using if statements without curly braces
src/chess/Main.java:573:	Comment is too large: Line too long
src/chess/Main.java:576:	Avoid really long methods.
src/chess/Main.java:576:	Parameter 'arg0' is not assigned and could be declared final
src/chess/Main.java:576:	The method 'mouseClicked' has a Cyclomatic Complexity of 29.
src/chess/Main.java:576:	The method 'mouseClicked' has a Modified Cyclomatic Complexity of 24.
src/chess/Main.java:576:	The method 'mouseClicked' has a Standard Cyclomatic Complexity of 24.
src/chess/Main.java:576:	The method mouseClicked() has an NPath complexity of 834
src/chess/Main.java:576:	publicMethodCommentRequirement Required
src/chess/Main.java:583:	Avoid using if statements without curly braces
src/chess/Main.java:583:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:588:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:590:	Avoid using if...else statements without curly braces
src/chess/Main.java:593:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:593:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:593:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:593:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:593:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:593:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:593:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:594:	Avoid using if...else statements without curly braces
src/chess/Main.java:595:	Avoid unnecessary comparisons in boolean expressions
src/chess/Main.java:595:	Avoid using if statements without curly braces
src/chess/Main.java:608:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Main.java:610:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:610:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:614:	Avoid using if statements without curly braces
src/chess/Main.java:617:	Avoid using if statements without curly braces
src/chess/Main.java:620:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:622:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:622:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:622:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:622:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:622:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:622:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:622:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:623:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:623:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:626:	Avoid using if statements without curly braces
src/chess/Main.java:631:	Avoid unnecessary comparisons in boolean expressions
src/chess/Main.java:631:	Avoid using if statements without curly braces
src/chess/Main.java:631:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:632:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:632:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:632:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:632:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:632:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:632:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:632:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:635:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:636:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:648:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Main.java:653:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:653:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:660:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:662:	Avoid using if...else statements without curly braces
src/chess/Main.java:665:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:665:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:665:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:665:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:665:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:665:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:665:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:666:	Avoid using if...else statements without curly braces
src/chess/Main.java:667:	Avoid unnecessary comparisons in boolean expressions
src/chess/Main.java:667:	Avoid using if statements without curly braces
src/chess/Main.java:675:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:676:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:682:	Parameter 'arg0' is not assigned and could be declared final
src/chess/Main.java:682:	publicMethodCommentRequirement Required
src/chess/Main.java:686:	Parameter 'arg0' is not assigned and could be declared final
src/chess/Main.java:686:	publicMethodCommentRequirement Required
src/chess/Main.java:690:	Parameter 'arg0' is not assigned and could be declared final
src/chess/Main.java:690:	publicMethodCommentRequirement Required
src/chess/Main.java:694:	Parameter 'arg0' is not assigned and could be declared final
src/chess/Main.java:694:	publicMethodCommentRequirement Required
src/chess/Main.java:699:	Each class should declare at least one constructor
src/chess/Main.java:699:	To avoid mistakes add a comment at the beginning of the START nested class if you want a default access modifier
src/chess/Main.java:699:	headerCommentRequirement Required
src/chess/Main.java:704:	Parameter 'arg0' is not assigned and could be declared final
src/chess/Main.java:704:	publicMethodCommentRequirement Required
src/chess/Main.java:736:	Each class should declare at least one constructor
src/chess/Main.java:736:	To avoid mistakes add a comment at the beginning of the TimeChange nested class if you want a default access modifier
src/chess/Main.java:736:	headerCommentRequirement Required
src/chess/Main.java:739:	Parameter 'arg0' is not assigned and could be declared final
src/chess/Main.java:739:	publicMethodCommentRequirement Required
src/chess/Main.java:746:	The class 'SelectHandler' has a Cyclomatic Complexity of 9 (Highest = 16).
src/chess/Main.java:746:	The class 'SelectHandler' has a Modified Cyclomatic Complexity of 9 (Highest = 16).
src/chess/Main.java:746:	The class 'SelectHandler' has a Standard Cyclomatic Complexity of 9 (Highest = 16).
src/chess/Main.java:746:	To avoid mistakes add a comment at the beginning of the SelectHandler nested class if you want a default access modifier
src/chess/Main.java:746:	headerCommentRequirement Required
src/chess/Main.java:748:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:748:	Private field 'color' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:748:	fieldCommentRequirement Required
src/chess/Main.java:750:	Avoid variables with short names like i
src/chess/Main.java:750:	Parameter 'i' is not assigned and could be declared final
src/chess/Main.java:755:	Found 'UR'-anomaly for variable 's' (lines '755'-'798').
src/chess/Main.java:755:	Parameter 'arg0' is not assigned and could be declared final
src/chess/Main.java:755:	The method 'actionPerformed' has a Cyclomatic Complexity of 16.
src/chess/Main.java:755:	The method 'actionPerformed' has a Modified Cyclomatic Complexity of 16.
src/chess/Main.java:755:	The method 'actionPerformed' has a Standard Cyclomatic Complexity of 16.
src/chess/Main.java:755:	The method actionPerformed() has an NPath complexity of 4500000
src/chess/Main.java:755:	publicMethodCommentRequirement Required
src/chess/Main.java:758:	Assigning an Object to null is a code smell.  Consider refactoring.
src/chess/Main.java:759:	Avoid declaring a variable if it is unreferenced before a possible exit point.
src/chess/Main.java:759:	Avoid variables with short names like n
src/chess/Main.java:759:	Found 'DD'-anomaly for variable 'n' (lines '759'-'771').
src/chess/Main.java:759:	Found 'DU'-anomaly for variable 'n' (lines '759'-'807').
src/chess/Main.java:760:	Avoid declaring a variable if it is unreferenced before a possible exit point.
src/chess/Main.java:760:	Avoid variables with short names like jc
src/chess/Main.java:760:	Found 'DU'-anomaly for variable 'jc' (lines '760'-'807').
src/chess/Main.java:760:	Local variable 'jc' could be declared final
src/chess/Main.java:761:	Avoid declaring a variable if it is unreferenced before a possible exit point.
src/chess/Main.java:761:	Found 'DU'-anomaly for variable 'ojc' (lines '761'-'807').
src/chess/Main.java:761:	Local variable 'ojc' could be declared final
src/chess/Main.java:762:	Avoid declaring a variable if it is unreferenced before a possible exit point.
src/chess/Main.java:762:	Avoid variables with short names like pl
src/chess/Main.java:762:	Found 'DU'-anomaly for variable 'pl' (lines '762'-'807').
src/chess/Main.java:762:	Local variable 'pl' could be declared final
src/chess/Main.java:764:	Local variable 'opl' could be declared final
src/chess/Main.java:765:	Avoid using if statements without curly braces
src/chess/Main.java:765:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:766:	A method should have only one exit point, and that should be the last statement in the method
src/chess/Main.java:767:	Found 'DU'-anomaly for variable 'det' (lines '767'-'807').
src/chess/Main.java:767:	Local variable 'det' could be declared final
src/chess/Main.java:768:	Avoid declaring a variable if it is unreferenced before a possible exit point.
src/chess/Main.java:768:	Avoid variables with short names like PL
src/chess/Main.java:768:	Found 'DU'-anomaly for variable 'PL' (lines '768'-'807').
src/chess/Main.java:768:	Local variable 'PL' could be declared final
src/chess/Main.java:768:	Variables should start with a lowercase character, 'PL' starts with uppercase character.
src/chess/Main.java:769:	Avoid unnecessary comparisons in boolean expressions
src/chess/Main.java:769:	Avoid using if statements without curly braces
src/chess/Main.java:770:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:771:	Found 'DU'-anomaly for variable 'n' (lines '771'-'807').
src/chess/Main.java:771:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:772:	Avoid variables with short names like it
src/chess/Main.java:772:	Local variable 'it' could be declared final
src/chess/Main.java:772:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:773:	Local variable 'oit' could be declared final
src/chess/Main.java:773:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:776:	Avoid variables with short names like p
src/chess/Main.java:776:	Local variable 'p' could be declared final
src/chess/Main.java:777:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:777:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:783:	Avoid variables with short names like p
src/chess/Main.java:783:	Local variable 'p' could be declared final
src/chess/Main.java:784:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:784:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:785:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:789:	Avoid using if statements without curly braces
src/chess/Main.java:792:	Avoid using if...else statements without curly braces
src/chess/Main.java:794:	Avoid using if...else statements without curly braces
src/chess/Main.java:796:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:797:	Avoid using for statements without curly braces
src/chess/Main.java:797:	Local variable 's' could be declared final
src/chess/Main.java:798:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:798:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:803:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:804:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:805:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:813:	To avoid mistakes add a comment at the beginning of the Handler nested class if you want a default access modifier
src/chess/Main.java:813:	headerCommentRequirement Required
src/chess/Main.java:814:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Main.java:814:	Private field 'color' could be made final; it is only initialized in the declaration or constructor.
src/chess/Main.java:814:	fieldCommentRequirement Required
src/chess/Main.java:815:	Avoid variables with short names like i
src/chess/Main.java:815:	Parameter 'i' is not assigned and could be declared final
src/chess/Main.java:820:	Avoid variables with short names like e
src/chess/Main.java:820:	Parameter 'e' is not assigned and could be declared final
src/chess/Main.java:820:	The method actionPerformed() has an NPath complexity of 1250
src/chess/Main.java:820:	publicMethodCommentRequirement Required
src/chess/Main.java:822:	Avoid variables with short names like n
src/chess/Main.java:822:	Found 'DD'-anomaly for variable 'n' (lines '822'-'827').
src/chess/Main.java:823:	Avoid variables with short names like j
src/chess/Main.java:823:	Local variable 'j' could be declared final
src/chess/Main.java:824:	Avoid variables with short names like N
src/chess/Main.java:824:	Local variable 'N' could be declared final
src/chess/Main.java:824:	Variables should start with a lowercase character, 'N' starts with uppercase character.
src/chess/Main.java:825:	Avoid variables with short names like it
src/chess/Main.java:825:	Found 'DU'-anomaly for variable 'it' (lines '825'-'859').
src/chess/Main.java:825:	Local variable 'it' could be declared final
src/chess/Main.java:825:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:826:	Avoid declaring a variable if it is unreferenced before a possible exit point.
src/chess/Main.java:826:	Found 'DU'-anomaly for variable 'det' (lines '826'-'859').
src/chess/Main.java:826:	Local variable 'det' could be declared final
src/chess/Main.java:829:	Avoid if (x != y) ..; else ..;
src/chess/Main.java:834:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:834:	Potential violation of Law of Demeter (method chain calls)
src/chess/Main.java:836:	A method should have only one exit point, and that should be the last statement in the method
src/chess/Main.java:839:	Avoid if (x != y) ..; else ..;
src/chess/Main.java:839:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:840:	Local variable 'tem' could be declared final
src/chess/Main.java:841:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:843:	Avoid using if...else statements without curly braces
src/chess/Main.java:845:	Avoid using if...else statements without curly braces
src/chess/Main.java:847:	A method should have only one exit point, and that should be the last statement in the method
src/chess/Main.java:847:	Avoid using if...else statements without curly braces
src/chess/Main.java:850:	Avoid using if...else statements without curly braces
src/chess/Main.java:851:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:855:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:856:	Potential violation of Law of Demeter (object not created locally)
src/chess/Main.java:857:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:20:	Comment is too large: Line too long
src/chess/Player.java:23:	The class 'Player' has a Cyclomatic Complexity of 3 (Highest = 13).
src/chess/Player.java:23:	The class 'Player' has a Modified Cyclomatic Complexity of 3 (Highest = 13).
src/chess/Player.java:23:	The class 'Player' has a Standard Cyclomatic Complexity of 3 (Highest = 13).
src/chess/Player.java:26:	Field name has the same name as a method
src/chess/Player.java:26:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Player.java:26:	Private field 'name' could be made final; it is only initialized in the declaration or constructor.
src/chess/Player.java:26:	fieldCommentRequirement Required
src/chess/Player.java:27:	Field gamesplayed has the same name as a method
src/chess/Player.java:27:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Player.java:27:	fieldCommentRequirement Required
src/chess/Player.java:28:	Field gameswon has the same name as a method
src/chess/Player.java:28:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Player.java:28:	fieldCommentRequirement Required
src/chess/Player.java:31:	Parameter 'name' is not assigned and could be declared final
src/chess/Player.java:31:	publicMethodCommentRequirement Required
src/chess/Player.java:35:	Avoid instantiating Integer objects. Call Integer.valueOf() instead.
src/chess/Player.java:36:	Avoid instantiating Integer objects. Call Integer.valueOf() instead.
src/chess/Player.java:40:	publicMethodCommentRequirement Required
src/chess/Player.java:46:	publicMethodCommentRequirement Required
src/chess/Player.java:52:	publicMethodCommentRequirement Required
src/chess/Player.java:58:	publicMethodCommentRequirement Required
src/chess/Player.java:60:	Avoid instantiating Integer objects. Call Integer.valueOf() instead.
src/chess/Player.java:64:	publicMethodCommentRequirement Required
src/chess/Player.java:70:	publicMethodCommentRequirement Required
src/chess/Player.java:76:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/chess/Player.java:76:	Method names should not contain underscores
src/chess/Player.java:76:	publicMethodCommentRequirement Required
src/chess/Player.java:79:	Found 'DD'-anomaly for variable 'input' (lines '79'-'84').
src/chess/Player.java:80:	Local variable 'players' could be declared final
src/chess/Player.java:83:	Local variable 'infile' could be declared final
src/chess/Player.java:83:	The String literal "user.dir" appears 4 times in this file; the first occurrence is on line 83
src/chess/Player.java:89:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:90:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:95:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:100:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:101:	A method should have only one exit point, and that should be the last statement in the method
src/chess/Player.java:105:	Avoid printStackTrace(); use a logger call instead.
src/chess/Player.java:105:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:106:	Avoid empty catch blocks
src/chess/Player.java:106:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:111:	Avoid printStackTrace(); use a logger call instead.
src/chess/Player.java:111:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:113:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/chess/Player.java:115:	Avoid printStackTrace(); use a logger call instead.
src/chess/Player.java:115:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:120:	Method names should not contain underscores
src/chess/Player.java:120:	Method names should not start with capital letters
src/chess/Player.java:120:	The method 'Update_Player' has a Cyclomatic Complexity of 13.
src/chess/Player.java:120:	The method 'Update_Player' has a Modified Cyclomatic Complexity of 13.
src/chess/Player.java:120:	The method 'Update_Player' has a Standard Cyclomatic Complexity of 13.
src/chess/Player.java:120:	publicMethodCommentRequirement Required
src/chess/Player.java:122:	Found 'DD'-anomaly for variable 'input' (lines '122'-'148').
src/chess/Player.java:122:	Found 'DU'-anomaly for variable 'input' (lines '122'-'195').
src/chess/Player.java:123:	Found 'DD'-anomaly for variable 'output' (lines '123'-'143').
src/chess/Player.java:123:	Found 'DD'-anomaly for variable 'output' (lines '123'-'149').
src/chess/Player.java:124:	Only variables that are final should contain underscores (except for underscores in standard prefix/suffix), 'temp_player' is not final.
src/chess/Player.java:125:	Found 'DD'-anomaly for variable 'inputfile' (lines '125'-'129').
src/chess/Player.java:126:	Found 'DD'-anomaly for variable 'outputfile' (lines '126'-'130').
src/chess/Player.java:134:	System.exit() should not be used in J2EE/JEE apps
src/chess/Player.java:139:	Avoid unnecessary comparisons in boolean expressions
src/chess/Player.java:139:	Avoid using if statements without curly braces
src/chess/Player.java:139:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:140:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:141:	Avoid unnecessary comparisons in boolean expressions
src/chess/Player.java:141:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:143:	Unnecessary use of fully qualified name 'java.io.FileOutputStream' due to existing import 'java.io.FileOutputStream'
src/chess/Player.java:144:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:150:	Found 'DD'-anomaly for variable 'playerdonotexist' (lines '150'-'159').
src/chess/Player.java:155:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:156:	Potential violation of Law of Demeter (method chain calls)
src/chess/Player.java:156:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:158:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:159:	Found 'DD'-anomaly for variable 'playerdonotexist' (lines '159'-'159').
src/chess/Player.java:162:	Avoid using if...else statements without curly braces
src/chess/Player.java:162:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:166:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:168:	Avoid using if statements without curly braces
src/chess/Player.java:169:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:171:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:172:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:173:	Local variable 'newf' could be declared final
src/chess/Player.java:174:	Avoid unnecessary comparisons in boolean expressions
src/chess/Player.java:174:	Avoid using if statements without curly braces
src/chess/Player.java:174:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:175:	System.out.println is used
src/chess/Player.java:179:	Avoid printStackTrace(); use a logger call instead.
src/chess/Player.java:179:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:183:	Avoid printStackTrace(); use a logger call instead.
src/chess/Player.java:183:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:188:	Avoid printStackTrace(); use a logger call instead.
src/chess/Player.java:188:	Potential violation of Law of Demeter (object not created locally)
src/chess/Player.java:191:	Avoid catching generic exceptions such as NullPointerException, RuntimeException, Exception in try-catch block
src/chess/Player.java:191:	Avoid empty catch blocks
src/chess/Time.java:12:	Comment is too large: Line too long
src/chess/Time.java:17:	Avoid short class names like Time
src/chess/Time.java:19:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Time.java:19:	Private field 'label' could be made final; it is only initialized in the declaration or constructor.
src/chess/Time.java:19:	fieldCommentRequirement Required
src/chess/Time.java:20:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Time.java:20:	To avoid mistakes add a comment at the beginning of the countdownTimer field if you want a default access modifier
src/chess/Time.java:20:	Use explicit scoping instead of the default package private level
src/chess/Time.java:20:	fieldCommentRequirement Required
src/chess/Time.java:21:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/chess/Time.java:21:	To avoid mistakes add a comment at the beginning of the Timerem field if you want a default access modifier
src/chess/Time.java:21:	Use explicit scoping instead of the default package private level
src/chess/Time.java:21:	Variables should start with a lowercase character, 'Timerem' starts with uppercase character.
src/chess/Time.java:21:	fieldCommentRequirement Required
src/chess/Time.java:22:	Parameter 'passedLabel' is not assigned and could be declared final
src/chess/Time.java:22:	publicMethodCommentRequirement Required
src/chess/Time.java:30:	publicMethodCommentRequirement Required
src/chess/Time.java:36:	publicMethodCommentRequirement Required
src/chess/Time.java:41:	Comment is too large: Line too long
src/chess/Time.java:42:	Each class should declare at least one constructor
src/chess/Time.java:42:	To avoid mistakes add a comment at the beginning of the CountdownTimerListener nested class if you want a default access modifier
src/chess/Time.java:42:	headerCommentRequirement Required
src/chess/Time.java:44:	Avoid variables with short names like e
src/chess/Time.java:44:	Parameter 'e' is not assigned and could be declared final
src/chess/Time.java:44:	publicMethodCommentRequirement Required
src/chess/Time.java:46:	Use one line for each declaration, it enhances code readability.
src/chess/Time.java:51:	No need to call String.valueOf to append to a string.
src/chess/Time.java:51:	No need to call String.valueOf to append to a string.
src/chess/Time.java:59:	Potential violation of Law of Demeter (static property access)
src/pieces/Bishop.java:10:	Comment is too large: Line too long
src/pieces/Bishop.java:14:	The class 'Bishop' has a Cyclomatic Complexity of 10 (Highest = 17).
src/pieces/Bishop.java:14:	The class 'Bishop' has a Modified Cyclomatic Complexity of 8 (Highest = 13).
src/pieces/Bishop.java:14:	The class 'Bishop' has a Standard Cyclomatic Complexity of 8 (Highest = 13).
src/pieces/Bishop.java:17:	Avoid variables with short names like c
src/pieces/Bishop.java:17:	Avoid variables with short names like i
src/pieces/Bishop.java:17:	Avoid variables with short names like p
src/pieces/Bishop.java:17:	It is a good practice to call super() in a constructor
src/pieces/Bishop.java:17:	Parameter 'c' is not assigned and could be declared final
src/pieces/Bishop.java:17:	Parameter 'i' is not assigned and could be declared final
src/pieces/Bishop.java:17:	Parameter 'p' is not assigned and could be declared final
src/pieces/Bishop.java:17:	publicMethodCommentRequirement Required
src/pieces/Bishop.java:24:	Comment is too large: Line too long
src/pieces/Bishop.java:26:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/pieces/Bishop.java:26:	Avoid variables with short names like x
src/pieces/Bishop.java:26:	Avoid variables with short names like y
src/pieces/Bishop.java:26:	Parameter 'state' is not assigned and could be declared final
src/pieces/Bishop.java:26:	Parameter 'x' is not assigned and could be declared final
src/pieces/Bishop.java:26:	Parameter 'y' is not assigned and could be declared final
src/pieces/Bishop.java:26:	The method 'move' has a Cyclomatic Complexity of 17.
src/pieces/Bishop.java:26:	The method 'move' has a Modified Cyclomatic Complexity of 13.
src/pieces/Bishop.java:26:	The method 'move' has a Standard Cyclomatic Complexity of 13.
src/pieces/Bishop.java:26:	The method move() has an NPath complexity of 625
src/pieces/Bishop.java:26:	publicMethodCommentRequirement Required
src/pieces/Bishop.java:31:	Use one line for each declaration, it enhances code readability.
src/pieces/Bishop.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:36:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:36:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:38:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:38:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:38:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:38:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:39:	Avoid using if...else statements without curly braces
src/pieces/Bishop.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:51:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:51:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:51:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:52:	Avoid using if...else statements without curly braces
src/pieces/Bishop.java:52:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:52:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:53:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:53:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:53:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:53:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:54:	Avoid using if...else statements without curly braces
src/pieces/Bishop.java:57:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:57:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:66:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:66:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:66:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:67:	Avoid using if...else statements without curly braces
src/pieces/Bishop.java:67:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:67:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:69:	Avoid using if...else statements without curly braces
src/pieces/Bishop.java:72:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:72:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:81:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:81:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:81:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:82:	Avoid using if...else statements without curly braces
src/pieces/Bishop.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:83:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:83:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:83:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:83:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:84:	Avoid using if...else statements without curly braces
src/pieces/Bishop.java:87:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Bishop.java:87:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:7:	Avoid short class names like King
src/pieces/King.java:7:	The class 'King' has a Cyclomatic Complexity of 14 (Highest = 82).
src/pieces/King.java:7:	The class 'King' has a Modified Cyclomatic Complexity of 8 (Highest = 44).
src/pieces/King.java:7:	The class 'King' has a Standard Cyclomatic Complexity of 8 (Highest = 44).
src/pieces/King.java:7:	headerCommentRequirement Required
src/pieces/King.java:9:	Avoid variables with short names like x
src/pieces/King.java:9:	Avoid variables with short names like y
src/pieces/King.java:9:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/pieces/King.java:9:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/pieces/King.java:9:	fieldCommentRequirement Required
src/pieces/King.java:12:	Avoid variables with short names like c
src/pieces/King.java:12:	Avoid variables with short names like i
src/pieces/King.java:12:	Avoid variables with short names like p
src/pieces/King.java:12:	Avoid variables with short names like x
src/pieces/King.java:12:	Avoid variables with short names like y
src/pieces/King.java:12:	It is a good practice to call super() in a constructor
src/pieces/King.java:12:	Parameter 'c' is not assigned and could be declared final
src/pieces/King.java:12:	Parameter 'i' is not assigned and could be declared final
src/pieces/King.java:12:	Parameter 'p' is not assigned and could be declared final
src/pieces/King.java:12:	Parameter 'x' is not assigned and could be declared final
src/pieces/King.java:12:	Parameter 'y' is not assigned and could be declared final
src/pieces/King.java:12:	publicMethodCommentRequirement Required
src/pieces/King.java:22:	Avoid variables with short names like x
src/pieces/King.java:22:	Parameter 'x' is not assigned and could be declared final
src/pieces/King.java:22:	publicMethodCommentRequirement Required
src/pieces/King.java:26:	Avoid variables with short names like y
src/pieces/King.java:26:	Parameter 'y' is not assigned and could be declared final
src/pieces/King.java:26:	publicMethodCommentRequirement Required
src/pieces/King.java:30:	publicMethodCommentRequirement Required
src/pieces/King.java:34:	publicMethodCommentRequirement Required
src/pieces/King.java:39:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/pieces/King.java:39:	Avoid variables with short names like x
src/pieces/King.java:39:	Avoid variables with short names like y
src/pieces/King.java:39:	Parameter 'state' is not assigned and could be declared final
src/pieces/King.java:39:	Parameter 'x' is not assigned and could be declared final
src/pieces/King.java:39:	Parameter 'y' is not assigned and could be declared final
src/pieces/King.java:39:	publicMethodCommentRequirement Required
src/pieces/King.java:43:	Found 'DU'-anomaly for variable 'posx' (lines '43'-'50').
src/pieces/King.java:43:	Local variable 'posx' could be declared final
src/pieces/King.java:44:	Found 'DU'-anomaly for variable 'posy' (lines '44'-'50').
src/pieces/King.java:44:	Local variable 'posy' could be declared final
src/pieces/King.java:45:	Avoid using for statements without curly braces
src/pieces/King.java:46:	Avoid using if statements without curly braces
src/pieces/King.java:46:	Useless parentheses.
src/pieces/King.java:47:	Avoid using if statements without curly braces
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:47:	These nested if statements could be combined
src/pieces/King.java:47:	Useless parentheses.
src/pieces/King.java:48:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:48:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:48:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:48:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:55:	Comment is too large: Line too long
src/pieces/King.java:56:	Avoid really long methods.
src/pieces/King.java:56:	Consider using varargs for methods or constructors which take an array the last parameter.
src/pieces/King.java:56:	Parameter 'state' is not assigned and could be declared final
src/pieces/King.java:56:	The method 'isindanger' has a Cyclomatic Complexity of 82.
src/pieces/King.java:56:	The method 'isindanger' has a Modified Cyclomatic Complexity of 44.
src/pieces/King.java:56:	The method 'isindanger' has a Standard Cyclomatic Complexity of 44.
src/pieces/King.java:56:	The method isindanger() has an NCSS line count of 123
src/pieces/King.java:56:	The method isindanger() has an NPath complexity of 967541888
src/pieces/King.java:56:	publicMethodCommentRequirement Required
src/pieces/King.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:63:	Avoid using if...else statements without curly braces
src/pieces/King.java:64:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:64:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:64:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:64:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:65:	Avoid using if...else statements without curly braces
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:68:	Useless parentheses.
src/pieces/King.java:68:	Useless parentheses.
src/pieces/King.java:69:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:69:	Avoid using if...else statements without curly braces
src/pieces/King.java:71:	Avoid using if...else statements without curly braces
src/pieces/King.java:76:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:76:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:76:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:77:	Avoid using if...else statements without curly braces
src/pieces/King.java:78:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:78:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:78:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:78:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:79:	Avoid using if...else statements without curly braces
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:82:	Useless parentheses.
src/pieces/King.java:82:	Useless parentheses.
src/pieces/King.java:83:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:83:	Avoid using if...else statements without curly braces
src/pieces/King.java:85:	Avoid using if...else statements without curly braces
src/pieces/King.java:90:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:90:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:90:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:91:	Avoid using if...else statements without curly braces
src/pieces/King.java:92:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:92:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:92:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:92:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:93:	Avoid using if...else statements without curly braces
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:96:	Useless parentheses.
src/pieces/King.java:96:	Useless parentheses.
src/pieces/King.java:97:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:97:	Avoid using if...else statements without curly braces
src/pieces/King.java:99:	Avoid using if...else statements without curly braces
src/pieces/King.java:104:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:104:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:104:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:105:	Avoid using if...else statements without curly braces
src/pieces/King.java:106:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:106:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:106:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:106:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:107:	Avoid using if...else statements without curly braces
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:110:	Useless parentheses.
src/pieces/King.java:110:	Useless parentheses.
src/pieces/King.java:111:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:111:	Avoid using if...else statements without curly braces
src/pieces/King.java:113:	Avoid using if...else statements without curly braces
src/pieces/King.java:118:	Use one line for each declaration, it enhances code readability.
src/pieces/King.java:121:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:121:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:121:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:126:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:126:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:126:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:126:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:127:	Avoid using if...else statements without curly braces
src/pieces/King.java:130:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:130:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:130:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:130:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:130:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:130:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:131:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:131:	Avoid using if...else statements without curly braces
src/pieces/King.java:133:	Avoid using if...else statements without curly braces
src/pieces/King.java:139:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:139:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:139:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:144:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:144:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:144:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:144:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:145:	Avoid using if...else statements without curly braces
src/pieces/King.java:148:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:148:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:148:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:148:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:148:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:148:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:149:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:149:	Avoid using if...else statements without curly braces
src/pieces/King.java:151:	Avoid using if...else statements without curly braces
src/pieces/King.java:157:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:157:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:157:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:162:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:162:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:162:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:162:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:163:	Avoid using if...else statements without curly braces
src/pieces/King.java:166:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:166:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:166:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:166:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:166:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:166:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:167:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:167:	Avoid using if...else statements without curly braces
src/pieces/King.java:169:	Avoid using if...else statements without curly braces
src/pieces/King.java:175:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:175:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:175:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:180:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:180:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:180:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:180:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:181:	Avoid using if...else statements without curly braces
src/pieces/King.java:184:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:184:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:184:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:184:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:184:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:184:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:185:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:185:	Avoid using if...else statements without curly braces
src/pieces/King.java:187:	Avoid using if...else statements without curly braces
src/pieces/King.java:192:	Found 'DU'-anomaly for variable 'posx' (lines '192'-'228').
src/pieces/King.java:192:	Local variable 'posx' could be declared final
src/pieces/King.java:193:	Found 'DU'-anomaly for variable 'posy' (lines '193'-'228').
src/pieces/King.java:193:	Local variable 'posy' could be declared final
src/pieces/King.java:194:	Avoid using for statements without curly braces
src/pieces/King.java:195:	Avoid using if statements without curly braces
src/pieces/King.java:195:	Useless parentheses.
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:196:	These nested if statements could be combined
src/pieces/King.java:196:	Useless parentheses.
src/pieces/King.java:198:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:203:	Found 'DU'-anomaly for variable 'pox' (lines '203'-'228').
src/pieces/King.java:203:	Local variable 'pox' could be declared final
src/pieces/King.java:204:	Found 'DU'-anomaly for variable 'poy' (lines '204'-'228').
src/pieces/King.java:204:	Local variable 'poy' could be declared final
src/pieces/King.java:206:	Avoid using for statements without curly braces
src/pieces/King.java:207:	Avoid using if statements without curly braces
src/pieces/King.java:207:	Useless parentheses.
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:208:	These nested if statements could be combined
src/pieces/King.java:208:	Useless parentheses.
src/pieces/King.java:210:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:215:	Avoid using if statements without curly braces
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:215:	Useless parentheses.
src/pieces/King.java:216:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:217:	Avoid using if statements without curly braces
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:217:	Useless parentheses.
src/pieces/King.java:218:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:222:	Avoid using if statements without curly braces
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:222:	Useless parentheses.
src/pieces/King.java:223:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/King.java:224:	Avoid using if statements without curly braces
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Potential violation of Law of Demeter (method chain calls)
src/pieces/King.java:224:	Useless parentheses.
src/pieces/King.java:225:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/Knight.java:15:	Avoid variables with short names like c
src/pieces/Knight.java:15:	Avoid variables with short names like i
src/pieces/Knight.java:15:	Avoid variables with short names like p
src/pieces/Knight.java:15:	It is a good practice to call super() in a constructor
src/pieces/Knight.java:15:	Parameter 'c' is not assigned and could be declared final
src/pieces/Knight.java:15:	Parameter 'i' is not assigned and could be declared final
src/pieces/Knight.java:15:	Parameter 'p' is not assigned and could be declared final
src/pieces/Knight.java:15:	publicMethodCommentRequirement Required
src/pieces/Knight.java:25:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/pieces/Knight.java:25:	Avoid variables with short names like x
src/pieces/Knight.java:25:	Avoid variables with short names like y
src/pieces/Knight.java:25:	Parameter 'state' is not assigned and could be declared final
src/pieces/Knight.java:25:	Parameter 'x' is not assigned and could be declared final
src/pieces/Knight.java:25:	Parameter 'y' is not assigned and could be declared final
src/pieces/Knight.java:25:	publicMethodCommentRequirement Required
src/pieces/Knight.java:28:	Found 'DU'-anomaly for variable 'posx' (lines '28'-'37').
src/pieces/Knight.java:28:	Local variable 'posx' could be declared final
src/pieces/Knight.java:29:	Found 'DU'-anomaly for variable 'posy' (lines '29'-'37').
src/pieces/Knight.java:29:	Local variable 'posy' could be declared final
src/pieces/Knight.java:30:	Avoid using for statements without curly braces
src/pieces/Knight.java:31:	Avoid using if statements without curly braces
src/pieces/Knight.java:31:	Useless parentheses.
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:32:	These nested if statements could be combined
src/pieces/Knight.java:32:	Useless parentheses.
src/pieces/Knight.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Knight.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:11:	Avoid short class names like Pawn
src/pieces/Pawn.java:11:	The class 'Pawn' has a Cyclomatic Complexity of 12 (Highest = 22).
src/pieces/Pawn.java:11:	The class 'Pawn' has a Modified Cyclomatic Complexity of 8 (Highest = 14).
src/pieces/Pawn.java:11:	The class 'Pawn' has a Standard Cyclomatic Complexity of 8 (Highest = 14).
src/pieces/Pawn.java:14:	Avoid variables with short names like c
src/pieces/Pawn.java:14:	Avoid variables with short names like i
src/pieces/Pawn.java:14:	Avoid variables with short names like p
src/pieces/Pawn.java:14:	It is a good practice to call super() in a constructor
src/pieces/Pawn.java:14:	Parameter 'c' is not assigned and could be declared final
src/pieces/Pawn.java:14:	Parameter 'i' is not assigned and could be declared final
src/pieces/Pawn.java:14:	Parameter 'p' is not assigned and could be declared final
src/pieces/Pawn.java:14:	publicMethodCommentRequirement Required
src/pieces/Pawn.java:22:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/pieces/Pawn.java:22:	Avoid variables with short names like x
src/pieces/Pawn.java:22:	Avoid variables with short names like y
src/pieces/Pawn.java:22:	Parameter 'state' is not assigned and could be declared final
src/pieces/Pawn.java:22:	Parameter 'x' is not assigned and could be declared final
src/pieces/Pawn.java:22:	Parameter 'y' is not assigned and could be declared final
src/pieces/Pawn.java:22:	The method 'move' has a Cyclomatic Complexity of 22.
src/pieces/Pawn.java:22:	The method 'move' has a Modified Cyclomatic Complexity of 14.
src/pieces/Pawn.java:22:	The method 'move' has a Standard Cyclomatic Complexity of 14.
src/pieces/Pawn.java:22:	The method move() has an NPath complexity of 256
src/pieces/Pawn.java:22:	publicMethodCommentRequirement Required
src/pieces/Pawn.java:31:	Avoid using if statements without curly braces
src/pieces/Pawn.java:32:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/Pawn.java:33:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:33:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:33:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:35:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:35:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:36:	Avoid using Literals in Conditional Statements
src/pieces/Pawn.java:38:	Avoid using if statements without curly braces
src/pieces/Pawn.java:38:	Deeply nested if..then statements are hard to read
src/pieces/Pawn.java:38:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:38:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:38:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:38:	These nested if statements could be combined
src/pieces/Pawn.java:39:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:39:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:42:	Avoid using if statements without curly braces
src/pieces/Pawn.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:42:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:42:	Useless parentheses.
src/pieces/Pawn.java:42:	Useless parentheses.
src/pieces/Pawn.java:42:	Useless parentheses.
src/pieces/Pawn.java:43:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:43:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:44:	Avoid using if statements without curly braces
src/pieces/Pawn.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:44:	Useless parentheses.
src/pieces/Pawn.java:44:	Useless parentheses.
src/pieces/Pawn.java:44:	Useless parentheses.
src/pieces/Pawn.java:45:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:45:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:49:	Avoid using Literals in Conditional Statements
src/pieces/Pawn.java:49:	Avoid using if statements without curly braces
src/pieces/Pawn.java:50:	A method should have only one exit point, and that should be the last statement in the method
src/pieces/Pawn.java:51:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:51:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:51:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:53:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:53:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:54:	Avoid using Literals in Conditional Statements
src/pieces/Pawn.java:56:	Avoid using if statements without curly braces
src/pieces/Pawn.java:56:	Deeply nested if..then statements are hard to read
src/pieces/Pawn.java:56:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:56:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:56:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:56:	These nested if statements could be combined
src/pieces/Pawn.java:57:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:57:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:60:	Avoid using if statements without curly braces
src/pieces/Pawn.java:60:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:60:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:60:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:60:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:60:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:60:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:60:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:60:	Useless parentheses.
src/pieces/Pawn.java:60:	Useless parentheses.
src/pieces/Pawn.java:60:	Useless parentheses.
src/pieces/Pawn.java:61:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:61:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:62:	Avoid using if statements without curly braces
src/pieces/Pawn.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:62:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:62:	Useless parentheses.
src/pieces/Pawn.java:62:	Useless parentheses.
src/pieces/Pawn.java:62:	Useless parentheses.
src/pieces/Pawn.java:63:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Pawn.java:63:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Piece.java:9:	Comment is too large: Line too long
src/pieces/Piece.java:11:	Comment is too large: Line too long
src/pieces/Piece.java:14:	Abstract classes should be named AbstractXXX
src/pieces/Piece.java:14:	Each class should declare at least one constructor
src/pieces/Piece.java:17:	Found non-transient, non-static member. Please mark as transient or provide accessors.
src/pieces/Piece.java:17:	fieldCommentRequirement Required
src/pieces/Piece.java:18:	Avoid using redundant field initializer for 'id'
src/pieces/Piece.java:18:	Avoid variables with short names like id
src/pieces/Piece.java:18:	fieldCommentRequirement Required
src/pieces/Piece.java:19:	fieldCommentRequirement Required
src/pieces/Piece.java:20:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/pieces/Piece.java:20:	fieldCommentRequirement Required
src/pieces/Piece.java:21:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/pieces/Piece.java:21:	Avoid variables with short names like x
src/pieces/Piece.java:21:	Avoid variables with short names like y
src/pieces/Piece.java:21:	publicMethodCommentRequirement Required
src/pieces/Piece.java:24:	Avoid variables with short names like id
src/pieces/Piece.java:24:	Parameter 'id' is not assigned and could be declared final
src/pieces/Piece.java:24:	publicMethodCommentRequirement Required
src/pieces/Piece.java:30:	Parameter 'path' is not assigned and could be declared final
src/pieces/Piece.java:30:	publicMethodCommentRequirement Required
src/pieces/Piece.java:36:	Avoid variables with short names like c
src/pieces/Piece.java:36:	Parameter 'c' is not assigned and could be declared final
src/pieces/Piece.java:36:	publicMethodCommentRequirement Required
src/pieces/Piece.java:42:	publicMethodCommentRequirement Required
src/pieces/Piece.java:48:	publicMethodCommentRequirement Required
src/pieces/Piece.java:54:	publicMethodCommentRequirement Required
src/pieces/Piece.java:59:	Comment is too large: Line too long
src/pieces/Piece.java:60:	publicMethodCommentRequirement Required
src/pieces/Queen.java:11:	The class 'Queen' has a Cyclomatic Complexity of 16 (Highest = 29).
src/pieces/Queen.java:11:	The class 'Queen' has a Modified Cyclomatic Complexity of 14 (Highest = 25).
src/pieces/Queen.java:11:	The class 'Queen' has a Standard Cyclomatic Complexity of 14 (Highest = 25).
src/pieces/Queen.java:14:	Avoid variables with short names like c
src/pieces/Queen.java:14:	Avoid variables with short names like i
src/pieces/Queen.java:14:	Avoid variables with short names like p
src/pieces/Queen.java:14:	It is a good practice to call super() in a constructor
src/pieces/Queen.java:14:	Parameter 'c' is not assigned and could be declared final
src/pieces/Queen.java:14:	Parameter 'i' is not assigned and could be declared final
src/pieces/Queen.java:14:	Parameter 'p' is not assigned and could be declared final
src/pieces/Queen.java:14:	publicMethodCommentRequirement Required
src/pieces/Queen.java:22:	Avoid really long methods.
src/pieces/Queen.java:22:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/pieces/Queen.java:22:	Avoid variables with short names like x
src/pieces/Queen.java:22:	Avoid variables with short names like y
src/pieces/Queen.java:22:	Parameter 'state' is not assigned and could be declared final
src/pieces/Queen.java:22:	Parameter 'x' is not assigned and could be declared final
src/pieces/Queen.java:22:	Parameter 'y' is not assigned and could be declared final
src/pieces/Queen.java:22:	The method 'move' has a Cyclomatic Complexity of 29.
src/pieces/Queen.java:22:	The method 'move' has a Modified Cyclomatic Complexity of 25.
src/pieces/Queen.java:22:	The method 'move' has a Standard Cyclomatic Complexity of 25.
src/pieces/Queen.java:22:	The method move() has an NPath complexity of 160000
src/pieces/Queen.java:22:	publicMethodCommentRequirement Required
src/pieces/Queen.java:33:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:33:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:33:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:34:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:34:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:35:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:35:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:35:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:35:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:36:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:39:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:39:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:48:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:48:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:48:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:49:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:49:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:49:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:50:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:50:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:50:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:50:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:51:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:54:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:54:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:65:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:65:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:65:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:66:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:66:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:66:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:67:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:67:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:67:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:67:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:68:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:71:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:71:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:79:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:79:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:79:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:80:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:80:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:80:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:81:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:81:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:81:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:81:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:82:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:85:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:85:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:95:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:95:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:95:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:96:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:96:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:97:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:97:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:97:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:97:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:98:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:101:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:101:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:110:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:111:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:111:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:111:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:112:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:112:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:112:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:112:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:113:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:116:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:116:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:125:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:125:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:125:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:126:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:126:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:126:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:127:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:127:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:127:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:127:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:128:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:131:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:131:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:140:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:140:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:140:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:141:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:141:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:141:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:142:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:142:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:142:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:142:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:143:	Avoid using if...else statements without curly braces
src/pieces/Queen.java:146:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Queen.java:146:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:11:	Avoid short class names like Rook
src/pieces/Rook.java:11:	The class 'Rook' has a Cyclomatic Complexity of 8 (Highest = 13).
src/pieces/Rook.java:11:	The class 'Rook' has a Modified Cyclomatic Complexity of 8 (Highest = 13).
src/pieces/Rook.java:11:	The class 'Rook' has a Standard Cyclomatic Complexity of 8 (Highest = 13).
src/pieces/Rook.java:14:	Avoid variables with short names like c
src/pieces/Rook.java:14:	Avoid variables with short names like i
src/pieces/Rook.java:14:	Avoid variables with short names like p
src/pieces/Rook.java:14:	It is a good practice to call super() in a constructor
src/pieces/Rook.java:14:	Parameter 'c' is not assigned and could be declared final
src/pieces/Rook.java:14:	Parameter 'i' is not assigned and could be declared final
src/pieces/Rook.java:14:	Parameter 'p' is not assigned and could be declared final
src/pieces/Rook.java:14:	publicMethodCommentRequirement Required
src/pieces/Rook.java:22:	Avoid using implementation types like 'ArrayList'; use the interface instead
src/pieces/Rook.java:22:	Avoid variables with short names like x
src/pieces/Rook.java:22:	Avoid variables with short names like y
src/pieces/Rook.java:22:	Parameter 'state' is not assigned and could be declared final
src/pieces/Rook.java:22:	Parameter 'x' is not assigned and could be declared final
src/pieces/Rook.java:22:	Parameter 'y' is not assigned and could be declared final
src/pieces/Rook.java:22:	The method 'move' has a Cyclomatic Complexity of 13.
src/pieces/Rook.java:22:	The method 'move' has a Modified Cyclomatic Complexity of 13.
src/pieces/Rook.java:22:	The method 'move' has a Standard Cyclomatic Complexity of 13.
src/pieces/Rook.java:22:	The method move() has an NPath complexity of 256
src/pieces/Rook.java:22:	publicMethodCommentRequirement Required
src/pieces/Rook.java:29:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:29:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:29:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:30:	Avoid using if...else statements without curly braces
src/pieces/Rook.java:30:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:30:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:31:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:31:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:31:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:31:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:32:	Avoid using if...else statements without curly braces
src/pieces/Rook.java:35:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:35:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:43:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:43:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:43:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:44:	Avoid using if...else statements without curly braces
src/pieces/Rook.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:44:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:45:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:45:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:45:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:45:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:46:	Avoid using if...else statements without curly braces
src/pieces/Rook.java:49:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:49:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:57:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:57:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:57:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:58:	Avoid using if...else statements without curly braces
src/pieces/Rook.java:58:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:58:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:59:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:59:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:59:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:59:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:60:	Avoid using if...else statements without curly braces
src/pieces/Rook.java:63:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:63:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:71:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:71:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:71:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:72:	Avoid using if...else statements without curly braces
src/pieces/Rook.java:72:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:72:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:73:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:73:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:73:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:73:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:74:	Avoid using if...else statements without curly braces
src/pieces/Rook.java:77:	Potential violation of Law of Demeter (method chain calls)
src/pieces/Rook.java:77:	Potential violation of Law of Demeter (method chain calls)
